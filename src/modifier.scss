@mixin hoverEditHint($message) {
  &:hover:not(:focus) {
    position: relative;
    outline: 1px solid #42b4e6;
    &::before {
      content: $message;
      position: absolute;
      top: 0;
      left: 0;
      padding: 0.1em 0.5em;
      color: #fff;
      background-color: #42b4e6;
      border-bottom-right-radius: 0.5em;
      font-size: small;
    }
  }
}
[data-key],
[data-key][data-contents] > *,
[data-link-to-edit] {
  @include hoverEditHint("Click to edit");
}
[data-link-to-create] {
  @include hoverEditHint("Click to add a new element");
}
[data-type="Footer"],
[data-json] {
  @include hoverEditHint("Double click to edit");
  [data-key][data-contents] > *,
  [data-key] {
    &:hover::before {
      content: none;
    }
  }
  [contenteditable="true"]:focus {
    outline: none;
  }
}

output.editable-markdown-preview[data-contents] {
  display: block;
  appearance: textarea;
  -webkit-appearance: textarea;
  cursor: text;
  padding: 2px;
}

dialog {
  // border: none;
  padding: 2rem;
  border-radius: 6px;
  box-shadow: 0 0 40px rgba(0, 0, 0, 0.1), 0 0 10px rgba(0, 0, 0, 0.25);
  max-width: 90vw;

  &::backdrop,
  & + .backdrop {
    background-color: #000a;
  }

  &[open] {
    animation: appear 0.15s cubic-bezier(0, 1.8, 1, 1.8);
  }

  form label {
    display: block;
  }

  .ordered-list {
    cursor: move;
    &.drop-candidate-for-reordering > .drop-candidate-for-reordering {
      transform: translateY(var(--dragged-element-height, 1rem));
      &::before {
        content: "Move here";
        display: flex;
        height: var(--dragged-element-height, 1rem);
        background-color: #000a;
        color: #fff;
        place-content: center;
      }
      & > *,
      &::before {
        transform: translateY(calc(var(--dragged-element-height, 1rem) * -1));
      }
      & + * {
        transform: translateY(calc(var(--dragged-element-height, 1rem) * 0.25));
        & > * {
          transform: translateY(
            calc(var(--dragged-element-height, 1rem) * -0.25)
          );
        }
      }
    }
  }
}

@keyframes appear {
  from {
    opacity: 0;
    transform: translateX(-3rem);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}
